plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.diffplug.spotless' version '6.11.0'
    id "it.nicolasfarabegoli.conventional-commits" version "3.1.3"
}

group = 'com.dain_review'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    //batch
//    implementation 'org.springframework.boot:spring-boot-starter-batch'

    //quartz
//    implementation 'org.springframework.boot:spring-boot-starter-quartz'

    //swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    //security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    //mail
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    //redis
    implementation 'org.redisson:redisson-spring-boot-starter:3.31.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    //QueryDsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    //actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    //prometheus
    implementation 'io.micrometer:micrometer-registry-prometheus'

    // S3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    //jwt
    compileOnly group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

    //sms nurigo
    implementation 'net.nurigo:sdk:4.3.0'

    //portOne
    implementation 'com.github.iamport:iamport-rest-client-java:0.2.23'

    tasks.named('test') {
        useJUnitPlatform()
    }

    bootJar {
        archiveFileName = 'DainReview.jar'
    }

    def generatedDir = file("src/main/generated")

    sourceSets {
        main {
            java {
                srcDir generatedDir
            }
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        options.compilerArgs += '-parameters'
        options.annotationProcessorGeneratedSourcesDirectory = generatedDir
    }

    tasks.clean {
        delete generatedDir
    }


    // git hook 설정
    spotless {
        java {
            target("src/main/java/**/*.java")
            googleJavaFormat().aosp()
            importOrder()
            removeUnusedImports()
            trimTrailingWhitespace()
            endWithNewline()
            formatAnnotations()
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        options.compilerArgs += '-parameters'
    }

    tasks.register('updateGitHooks', Copy) {
        from('./scripts/pre-commit') {
            rename 'pre-commit', 'pre-commit'
        }
        into('.git/hooks')
        fileMode 0775

        doFirst {
            file('.git/hooks').mkdirs()
        }
    }
    compileJava.dependsOn updateGitHooks
}